## Scenario settings
# A name to identify the present scenario
Scenario.name = begining_level
# Whether to create connections among nodes
Scenario.simulateConnections = true
# How frequently to sample the simulation
Scenario.updateInterval = 1
# 43200s == 12h
# How long the simulation will run (in seconds)
Scenario.endTime = 1000
# How many groups of nodes to be created (atleast one)
Scenario.nrofHostGroups = 2



## Interface-specific settings:
# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
# Range of transmission (in meter)
btInterface.transmitRange = 10


## Group-specific settings:
# Common settings for all groups
# Mobility model for all the nodes
Group.movementModel = ExternalMovement
ExternalMovement.file = ../pedsim/ecosystem/build-pedsim-Desktop_Qt_5_9_9_GCC_64bit-Debug/trace.txt



# Routing protocol to be used by a node in the group
Group.router = EpidemicRouter
# Buffer size of any node
Group.bufferSize = 5M
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300
# Identifier for the nodes in this group
Group.groupID = pessoa




## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
# World's size for Movement Models without implicit size (width, height; in meters)
MovementModel.worldSize = 3000,4000


## Message creation parameters

# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (Following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1,2
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# Range of message source/destination addresses
# Note: This shouldnâ€™t be greater than # of nodes
Events1.hosts = 0,4
# Message ID prefix
Events1.prefix = M



## Reports - all report names have to be valid report classes
# How many reports to load
Report.nrofReports = 1
# Directory where reports would be created
Report.reportDir = reports/beta
# Report classes to load
Report.report1 = MessageStatsReport


